
/* -------------------------------------------------------------------------- */

#ifndef __BB_LOG_H__
# define __BB_LOG_H__

/*******************************************************************************
 * %% BeginSection: includes
 */

# include <bb/types.h>
# include <string>

/*******************************************************************************
 * %% BeginSection: function declarations
 */
# pragma mark -
# pragma mark [ function declarations ]
# pragma mark -

namespace bb {

/* Write an unimportant message to the output, only shown when
 * options::verbosity is higher than normal (VERBOSE or above). The output will
 * not be interleaved with any other BB messages (other than those generated by
 * system commands). */
extern void verbose(acontext&, const std::string&);

/* Write a normal priority message to the output, only suppressed when
 * options::verbosity is ERROR, WARN or SILENT. The output will not be
 * interleaved with any other BB messages (other than those generated by
 * system commands). */
extern void info(acontext&, const std::string&);

/* Write a semi important message to the output, only suppressed when
 * options::verbosity is ERROR or SILENT. The output will not be interleaved
 * with any other BB messages (other than those generated by
 * system commands). */
extern void warn(acontext&, const std::string&);

/* Write an important message to the output, only suppressed when
 * options::verbosity is Silent. The output will not be interleaved with any
 * other BB messages (other than those generated by system commands). */
extern void error(acontext&, const std::string&);

}

#endif /* !defined(__BB_LOG_H__) */

/*******************************************************************************
 *
 *
 *
 ******************************************************************************/

